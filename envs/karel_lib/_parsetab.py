
# _parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'C_LBRACE C_RBRACE DEF ELSE E_LBRACE E_RBRACE FRONT_IS_CLEAR IF IFELSE INT I_LBRACE I_RBRACE LEFT_IS_CLEAR MARKERS_PRESENT MOVE M_LBRACE M_RBRACE NOT NO_MARKERS_PRESENT PICK_MARKER PUT_MARKER REPEAT RIGHT_IS_CLEAR RUN R_LBRACE R_RBRACE TURN_LEFT TURN_RIGHT WHILE W_LBRACE W_RBRACEprog : DEF RUN M_LBRACE stmt_or_empty M_RBRACEstmt : while\n                | repeat\n                | stmt_stmt\n                | action\n                | if\n                | ifelse\n        stmt_or_empty : stmt\n                         | empty\n        stmt_stmt : stmt stmt\n        if : IF C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE\n        ifelse : IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE ELSE E_LBRACE stmt_or_empty E_RBRACE\n        while : WHILE C_LBRACE cond C_RBRACE W_LBRACE stmt_or_empty W_RBRACE\n        repeat : REPEAT cste R_LBRACE stmt_or_empty R_RBRACE\n        cond : cond_without_not\n                | NOT C_LBRACE cond_without_not C_RBRACE\n        cond_without_not : FRONT_IS_CLEAR\n                            | LEFT_IS_CLEAR\n                            | RIGHT_IS_CLEAR\n                            | MARKERS_PRESENT\n                            | NO_MARKERS_PRESENT\n        action : MOVE\n                  | TURN_RIGHT\n                  | TURN_LEFT\n                  | PICK_MARKER\n                  | PUT_MARKER\n        cste : INT\n        empty :'
    
_lr_action_items = {'R_RBRACE':([5,6,7,8,9,11,13,14,15,18,19,21,22,23,38,43,48,56,57,61,],[-8,-6,-5,-22,-25,-9,-7,-26,-4,-24,-2,-23,-3,-10,-28,48,-14,-13,-11,-12,]),'MOVE':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[8,8,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,8,8,8,-14,8,8,-13,-11,8,-12,]),'PICK_MARKER':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[9,9,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,9,9,9,-14,9,9,-13,-11,9,-12,]),'IFELSE':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[10,10,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,10,10,10,-14,10,10,-13,-11,10,-12,]),'RIGHT_IS_CLEAR':([24,27,28,42,],[32,32,32,32,]),'LEFT_IS_CLEAR':([24,27,28,42,],[30,30,30,30,]),'E_LBRACE':([58,],[59,]),'R_LBRACE':([25,26,],[-27,38,]),'REPEAT':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[12,12,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,12,12,12,-14,12,12,-13,-11,12,-12,]),'$end':([2,29,],[0,-1,]),'I_RBRACE':([5,6,7,8,9,11,13,14,15,18,19,21,22,23,46,48,50,51,54,56,57,61,],[-8,-6,-5,-22,-25,-9,-7,-26,-4,-24,-2,-23,-3,-10,-28,-14,-28,55,57,-13,-11,-12,]),'TURN_RIGHT':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[21,21,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,21,21,21,-14,21,21,-13,-11,21,-12,]),'M_RBRACE':([4,5,6,7,8,9,11,13,14,15,18,19,20,21,22,23,48,56,57,61,],[-28,-8,-6,-5,-22,-25,-9,-7,-26,-4,-24,-2,29,-23,-3,-10,-14,-13,-11,-12,]),'DEF':([0,],[1,]),'WHILE':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[16,16,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,16,16,16,-14,16,16,-13,-11,16,-12,]),'INT':([12,],[25,]),'W_LBRACE':([44,],[49,]),'IF':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[17,17,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,17,17,17,-14,17,17,-13,-11,17,-12,]),'NO_MARKERS_PRESENT':([24,27,28,42,],[34,34,34,34,]),'C_RBRACE':([30,31,32,33,34,35,37,39,40,47,52,],[-18,-17,-19,41,-21,-15,-20,44,45,52,-16,]),'FRONT_IS_CLEAR':([24,27,28,42,],[31,31,31,31,]),'TURN_LEFT':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[18,18,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,18,18,18,-14,18,18,-13,-11,18,-12,]),'ELSE':([55,],[58,]),'W_RBRACE':([5,6,7,8,9,11,13,14,15,18,19,21,22,23,48,49,53,56,57,61,],[-8,-6,-5,-22,-25,-9,-7,-26,-4,-24,-2,-23,-3,-10,-14,-28,56,-13,-11,-12,]),'RUN':([1,],[3,]),'C_LBRACE':([10,16,17,36,],[24,27,28,42,]),'PUT_MARKER':([4,5,6,7,8,9,13,14,15,18,19,21,22,23,38,46,48,49,50,56,57,59,61,],[14,14,-6,-5,-22,-25,-7,-26,-4,-24,-2,-23,-3,14,14,14,-14,14,14,-13,-11,14,-12,]),'M_LBRACE':([3,],[4,]),'MARKERS_PRESENT':([24,27,28,42,],[37,37,37,37,]),'I_LBRACE':([41,45,],[46,50,]),'E_RBRACE':([5,6,7,8,9,11,13,14,15,18,19,21,22,23,48,56,57,59,60,61,],[-8,-6,-5,-22,-25,-9,-7,-26,-4,-24,-2,-23,-3,-10,-14,-13,-11,-28,61,-12,]),'NOT':([24,27,28,],[36,36,36,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'stmt':([4,5,23,38,46,49,50,59,],[5,23,23,5,5,5,5,5,]),'if':([4,5,23,38,46,49,50,59,],[6,6,6,6,6,6,6,6,]),'prog':([0,],[2,]),'action':([4,5,23,38,46,49,50,59,],[7,7,7,7,7,7,7,7,]),'cste':([12,],[26,]),'while':([4,5,23,38,46,49,50,59,],[19,19,19,19,19,19,19,19,]),'stmt_or_empty':([4,38,46,49,50,59,],[20,43,51,53,54,60,]),'cond':([24,27,28,],[33,39,40,]),'empty':([4,38,46,49,50,59,],[11,11,11,11,11,11,]),'ifelse':([4,5,23,38,46,49,50,59,],[13,13,13,13,13,13,13,13,]),'cond_without_not':([24,27,28,42,],[35,35,35,47,]),'stmt_stmt':([4,5,23,38,46,49,50,59,],[15,15,15,15,15,15,15,15,]),'repeat':([4,5,23,38,46,49,50,59,],[22,22,22,22,22,22,22,22,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> DEF RUN M_LBRACE stmt_or_empty M_RBRACE','prog',5,'p_prog','parser_for_synthesis.py',175),
  ('stmt -> while','stmt',1,'p_stmt','parser_for_synthesis.py',186),
  ('stmt -> repeat','stmt',1,'p_stmt','parser_for_synthesis.py',187),
  ('stmt -> stmt_stmt','stmt',1,'p_stmt','parser_for_synthesis.py',188),
  ('stmt -> action','stmt',1,'p_stmt','parser_for_synthesis.py',189),
  ('stmt -> if','stmt',1,'p_stmt','parser_for_synthesis.py',190),
  ('stmt -> ifelse','stmt',1,'p_stmt','parser_for_synthesis.py',191),
  ('stmt_or_empty -> stmt','stmt_or_empty',1,'p_stmt_or_empty','parser_for_synthesis.py',198),
  ('stmt_or_empty -> empty','stmt_or_empty',1,'p_stmt_or_empty','parser_for_synthesis.py',199),
  ('stmt_stmt -> stmt stmt','stmt_stmt',2,'p_stmt_stmt','parser_for_synthesis.py',210),
  ('if -> IF C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE','if',7,'p_if','parser_for_synthesis.py',223),
  ('ifelse -> IFELSE C_LBRACE cond C_RBRACE I_LBRACE stmt_or_empty I_RBRACE ELSE E_LBRACE stmt_or_empty E_RBRACE','ifelse',11,'p_ifelse','parser_for_synthesis.py',243),
  ('while -> WHILE C_LBRACE cond C_RBRACE W_LBRACE stmt_or_empty W_RBRACE','while',7,'p_while','parser_for_synthesis.py',276),
  ('repeat -> REPEAT cste R_LBRACE stmt_or_empty R_RBRACE','repeat',5,'p_repeat','parser_for_synthesis.py',306),
  ('cond -> cond_without_not','cond',1,'p_cond','parser_for_synthesis.py',331),
  ('cond -> NOT C_LBRACE cond_without_not C_RBRACE','cond',4,'p_cond','parser_for_synthesis.py',332),
  ('cond_without_not -> FRONT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',352),
  ('cond_without_not -> LEFT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',353),
  ('cond_without_not -> RIGHT_IS_CLEAR','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',354),
  ('cond_without_not -> MARKERS_PRESENT','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',355),
  ('cond_without_not -> NO_MARKERS_PRESENT','cond_without_not',1,'p_cond_without_not','parser_for_synthesis.py',356),
  ('action -> MOVE','action',1,'p_action','parser_for_synthesis.py',370),
  ('action -> TURN_RIGHT','action',1,'p_action','parser_for_synthesis.py',371),
  ('action -> TURN_LEFT','action',1,'p_action','parser_for_synthesis.py',372),
  ('action -> PICK_MARKER','action',1,'p_action','parser_for_synthesis.py',373),
  ('action -> PUT_MARKER','action',1,'p_action','parser_for_synthesis.py',374),
  ('cste -> INT','cste',1,'p_cste','parser_for_synthesis.py',388),
  ('empty -> <empty>','empty',0,'p_empty','parser_for_synthesis.py',405),
]
